{"version":3,"sources":["components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["CardList","robots","Error","SearchBox","searchfield","searchChange","className","type","placeholder","onChange","Scroll","props","style","overflowX","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","name","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OA6BeA,EAzBE,SAAC,GAAe,EAAbC,OAEZ,MAAM,IAAIC,MAAM,cCWTC,EAfG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKC,UAAU,MAAf,SACI,uBACIA,UAAY,mCACZC,KAAO,SACPC,YAAY,eACZC,SAAYJ,OCCbK,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAS,SAAtE,SACKJ,EAAMK,YCqBJC,E,kDAvBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHA,E,qDAOlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAW,M,oBAI/B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,2DAEJG,KAAKX,MAAMK,a,GAjBCQ,aCiDZC,G,wDA1CX,aAAc,IAAD,8BACT,gBAaJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACnB,YAAcuB,EAAMC,OAAOC,SAb1C,EAAKX,MAAQ,CACTjB,OAAQ,GACRG,YAAa,IAJR,E,qDAQb,WAAoB,IAAD,OACf0B,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAACtB,OAASiC,S,oBAS/C,WACI,MAA+BZ,KAAKJ,MAA7BjB,EAAP,EAAOA,OAAQG,EAAf,EAAeA,YACT+B,EAAiBlC,EAAOmC,QAAO,SAAAC,GACjC,OAAOA,EAAMC,KAAKC,cAAcC,SAASpC,EAAYmC,kBAEzD,OAAQtC,EAAOwC,OAGX,sBAAKnC,UAAY,MAAjB,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWD,aAAciB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUzB,OAAQkC,WAP9B,6C,GA3BMX,cCIHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEAC,SAASC,eAAe,SAM5BZ,M","file":"static/js/main.127fa936.chunk.js","sourcesContent":["import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({ robots }) => {\r\n    if (true){\r\n        throw new Error(\"noooooo!!\");\r\n    }\r\n    return (\r\n        <React.StrictMode>\r\n        <div>\r\n            {\r\n            robots.map((user, i ) => {\r\n                return (\r\n                    <Card \r\n                        key={i} \r\n                        id={robots[i].id} \r\n                        name={robots[i].name} \r\n                        email={robots[i].email}\r\n                    />\r\n                ); \r\n            })\r\n            }\r\n        </div>\r\n        </React.StrictMode>\r\n\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n                className = 'pa3 ba b--green bg-lightest-blue'\r\n                type = 'search' \r\n                placeholder='Search robot' \r\n                onChange = {searchChange}\r\n\r\n\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowX: 'scroll', border: '1px solid black', height : '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError: false \r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({ hasError : true})\r\n\r\n    }\r\n\r\n    render(){\r\n        if (this.state.hasError) {\r\n            return <h1>Ooooops. That is not good</h1>\r\n        }\r\n        return this.props.children\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport { robots } from '../robots';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({robots : users}))\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield : event.target.value})\r\n        //console.log(filteredRobots);\r\n    }\r\n    \r\n    \r\n    render(){\r\n        const {robots, searchfield } = this.state; \r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        return !robots.length ?\r\n            <h1>Loading</h1> : \r\n            (\r\n            <div className = 'tc '>\r\n                <h1 className='f1'>RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <ErrorBoundry>\r\n                        <CardList robots={filteredRobots}/>    \r\n                    </ErrorBoundry>\r\n                </Scroll>\r\n            </div>\r\n            )\r\n\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  , document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}